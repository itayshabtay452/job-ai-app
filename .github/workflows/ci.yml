name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jobai
        options: >-
          --health-cmd="pg_isready -U postgres -d jobai"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/jobai?schema=public
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: testsecret
      GITHUB_ID: dummy
      GITHUB_SECRET: dummy
      OPENAI_API_KEY: dummy
      CI: true
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install deps (include devDependencies)
        run: pnpm install --frozen-lockfile --prod=false

      - name: Prisma generate
        run: pnpm exec prisma generate

      - name: Migrate database
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: pnpm exec prisma migrate deploy

      - name: Build app
        run: pnpm build
        env:
          NODE_ENV: production

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Run unit+integration tests (Vitest)
        run: pnpm test:vi
        env:
          NODE_ENV: production

      - name: Run e2e smoke (Playwright)
        run: pnpm test:e2e
        env:
          NODE_ENV: production

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
